#import "AppDelegate.h"

#import <React/RCTBundleURLProvider.h>

{% if 'CodePush' in feature %}
#import <AppCenterReactNative.h>
#import <CodePush/CodePush.h>
{% endif %}
{% if 'DeepLink' in feature %}
#import <React/RCTLinkingManager.h>
{% endif %}
#import "RNSplashScreen.h"
#import "Orientation.h"

@implementation AppDelegate

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
  self.moduleName = @"{{project_name}}";
  // You can add your custom initial props in the dictionary below.
  // They will be passed down to the ViewController used by React Native.
  self.initialProps = @{};

  {% if 'CodePush' in feature %}
  //App Center
  [AppCenterReactNative register];
  {% endif %}
  
  //Splash screen
  [RNSplashScreen initialize:@"LaunchScreen" inRootView:rootView];
  [RNSplashScreen show];
  
  //Set initial orientation
  [Orientation setOrientation:UIInterfaceOrientationMaskPortrait];

  return [super application:application didFinishLaunchingWithOptions:launchOptions];
}

- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
{
  return [self getBundleURL];
}

- (NSURL *)getBundleURL
{
#if DEBUG
  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index"];
#else
  {% if 'CodePush' in feature %}
  return [CodePush bundleURL];
  {% else %}
  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
  {% endif %}
#endif
}

{% if 'DeepLink' in feature %}
//DeepLink
- (BOOL)application:(UIApplication *)application
   openURL:(NSURL *)url
   options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options
{
  return [RCTLinkingManager application:application openURL:url options:options]; // || [RNGoogleSignin application:application openURL:url options:options];
}

- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity
 restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler
{
 return [RCTLinkingManager application:application
                  continueUserActivity:userActivity
                    restorationHandler:restorationHandler];
}
{% endif %}

// Screen orientation
- (UIInterfaceOrientationMask)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window {
  return [Orientation getOrientation];
}

@end
